buildscript {
    ext.kotlin_version = "1.3.61"
    ext.dokka_version = "0.10.0"
    ext.detekt_version = "1.0.0-RC12"
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.2.1"
}
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'application'

mainClassName = 'com.molikuner.calk.MainKt'

defaultTasks 'run'

dokka {
    outputFormat = 'gfm'
    outputDirectory = "$buildDir/md"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'html'
    outputDirectory = "$buildDir/html"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

jar {
    manifest {
        attributes 'Main-Class': 'com.molikuner.calk.MainKt'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

detekt {
    baseline = file("detekt/baseline.xml")
    reports {
        xml {
            destination = file("detekt/reports/detekt.xml")  // Path where XML report will be stored (default: `build/reports/detekt/detekt.xml`)
        }
        html {
            destination = file("detekt/reports/detekt.html") // Path where HTML report will be stored (default: `build/reports/detekt/detekt.html`)
        }
    }

}
